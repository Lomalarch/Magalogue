<?php
# -- BEGIN LICENSE BLOCK ---------------------------------------
# This file is part of Berlin, a theme for Dotclear
#
# Copyright (c) Association Dotclear
# Licensed under the GPL version 2.0 license.
# See LICENSE file or
# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
#
# -- END LICENSE BLOCK -----------------------------------------
if (!defined('DC_RC_PATH')) { return; }

l10n::set(dirname(__FILE__).'/locales/'.$_lang.'/main');
//__('Show menu').__('Hide menu').__('Navigation');

$core->url->register('feed/imagesfeed','feed/imagesfeed','^feed/imagesfeed$',array('FeaturedImageFeed','imagesfeed'));
$core->url->register('feed/selectedfeed','feed/selectedfeed','^feed/selectedfeed$',array('FeaturedImageFeed','selectedfeed'));
$core->addBehavior('publicHeadContent',array('behaviorUmiTheme','publicHeadContent'));
// $core->addBehavior('publicEntryAfterContent',array('behaviorUmiTheme','publicEntryAfterContent'));

class behaviorUmiTheme
{
	public static function publicHeadContent()
	{
//		global $core,$_ctx;

		echo dcUtils::jsVars(array(
			'dotclear_berlin_show_menu' => __('Show menu'),
			'dotclear_berlin_hide_menu' => __('Hide menu'),
			'dotclear_berlin_navigation' => __('Navigation')
			));
	}
	public static function publicEntryAfterContent($core,$_ctx)
	{
		global $core;
		# Settings

		$s =& $core->blog->settings->relatedEntries;
		
		if (!$s->relatedEntries_enabled) {
			return;
		}
		// if (!$s->relatedEntries_afterPost) {
		// 	return;
		// }
		if (self::thisPostrelatedEntries($_ctx->posts->post_id) != '') {
			
			//related entries
			$meta =& $GLOBALS['core']->meta;
			
			$r_ids = self::thisPostrelatedEntries($_ctx->posts->post_id);
			$params['post_id'] = $meta->splitMetaValues($r_ids);
			$rs = $core->blog->getPosts($params);
			
			//traitement des billets connexes avec les Featured Medias

			$ret = $s->relatedEntries_title != '' ? '<h3>'.$s->relatedEntries_title.'</h3>' : '';
			$ret .= '<'.($html_tag == 'li' ? 'ul' : 'div').' class="relatedEntries">'

			if ($core->plugins->moduleExists('featuredMedia') && ($_ctx->posts !== null && $core->media)) {
				$_ctx->featured = new ArrayObject($core->media->getPostMedia($_ctx->posts->post_id,null,"featured"));
				$size = $img_options['size'] ? $img_options['size'] : 'o';
				if (isset($featured_f->media_thumb['$size']))
				{
					$featuredImage = $featured_f->media_thumb['$size'];
				} else 
				{
					$featuredImage = $featured_f->file_url;
				}
			
				$ret .= '<div class="outer_portrait"><img src="'.$featuredImage.'"" />';
				$ret .= '</div>';
				
				echo $ret;
			}

// 			// if ($core->plugins->moduleExists('listImages') && $s->relatedEntries_images) {
				
// 			// 	//images display options
// 			// 	$img_options = unserialize($s->relatedEntries_images_options);
				
// 			// 	$size = $img_options['size'] ? $img_options['size'] : 't';
// 			// 	$html_tag = $img_options['html_tag'] ? $img_options['html_tag'] : 'div';
// 			// 	$link = $img_options['link'] ? $img_options['link'] : 'entry';
// 			// 	$exif = $img_options['exif'] ? $img_options['exif'] : 0;
// 			// 	$legend = $img_options['legend'] ? $img_options['legend'] : 'none';
// 			// 	$bubble = $img_options['bubble'] ? $img_options['bubble'] : 'image';
// 			// 	$from = $img_options['from'] ? $img_options['from'] : 'full';
// 			// 	$start = $img_options['start'] ? $img_options['start'] : 1;
// 			// 	$length = $img_options['length'] ? $img_options['length'] : 1;
// 			// 	$class = $img_options['class'] ? $img_options['class'] : '';
// 			// 	$alt = $img_options['alt'] ? $img_options['alt'] : 'inherit';
// 			// 	$img_dim = $img_options['img_dim'] ? $img_options['img_dim'] : 0;
// 			// 	$def_size = "o";
// 			// 	$ret = $s->relatedEntries_title != '' ? '<h3>'.$s->relatedEntries_title.'</h3>' : '';
// 			// 	$ret .= '<'.($html_tag == 'li' ? 'ul' : 'div').' class="relatedEntries">';
				
// 			// 	//listImages plugin comes here
// 			// 	while ($rs->fetch()) {
// 			// 		$ret .= tplEntryImages::EntryImagesHelper($size, $html_tag, $link, $exif, $legend, $bubble, $from, $start, $length, $class, $alt, $img_dim, $def_size, $rs);
// 			// 	}
				
// 			// 	$ret .= '</'.($html_tag == 'li' ? 'ul' : 'div').'>'."\n";

// 			// 	echo $ret;
// 			// } elseif (!$core->plugins->moduleExists('listImages') || !$s->relatedEntries_images) {
				
// 			// 	$ret = $s->relatedEntries_title != '' ? '<h3>'.$s->relatedEntries_title.'</h3>' : '';
// 			// 	$ret .= '<ul class="relatedEntries">';
				
// 			// 	while ($rs->fetch()) {
// 			// 		$ret .= '<li><a href="'.$rs->getURL().'" title="'.html::escapeHTML($rs->post_title).'">'.$rs->post_title.'</a></li>';
// 			// 	}
// 			// 	$ret .= '</ul>';
				
// 			// 	echo $ret;
// 			// }
			
		}
	}
}
class FeaturedImageFeed extends dcUrlHandlers
{
	public static function imagesfeed() 
	{
		global $core;

		$_ctx->nb_entry_per_page = $core->blog->settings->nb_post_per_feed;

		$mime = 'application/atom+xml';
		self::serveDocument('imagesfeed.xml',$mime);
	}
	public static function selectedfeed() 
	{
		global $core;

		$_ctx->nb_entry_per_page = $core->blog->settings->nb_post_per_feed;

		$mime = 'application/atom+xml';
		self::serveDocument('selectedfeed.xml',$mime);
	}
}

// $core->addBehavior('publicEntryAfterContent',array('addToAny','entryAfterContent'));
// $core->addBehavior('publicFooterContent',array('addToAny','footerContent'));
// class addToAny
// {

//     public static function entryAfterContent($cur,$post_id) {
//     global $_ctx;
//     echo '<!-- AddToAny BEGIN -->
//     <div class="a2a_kit a2a_kit_size_32 a2a_default_style">
//     <a class="a2a_button_facebook"></a>
//     <a class="a2a_button_pinterest"></a>
//     <a class="a2a_button_twitter"></a>
//     <a class="a2a_button_google_plus"></a>
//     <a class="a2a_button_email"></a>
//     <a class="a2a_dd" href="https://www.addtoany.com/share"></a>
//     </div>
//     <!-- AddToAny END -->';
// //     return $addThisButtons;
//     }
//     public static function footerContent($cur,$post_id) {
//     echo '<script type="text/javascript">
//     var a2a_config = a2a_config || {};
//     a2a_config.locale = "fr";
// </script>
// <script type="text/javascript" async src="https://static.addtoany.com/menu/page.js"></script>';
//     }
// }
// $core->addBehavior('publicEntryAfterContent',array('addThis','entryAfterContent'));
// $core->addBehavior('publicFooterContent',array('addThis','footerContent'));

// class addThis
// {

//     public static function entryAfterContent($cur,$post_id) {
//     global $_ctx;
//     echo '<!-- AddThis Button BEGIN -->
//     <div class="addthis_toolbox addthis_default_style addthis_32x32_style">
//       <a class="addthis_button_facebook" addthis:url="'.$_ctx->posts->getURL().'" addthis:title="'.$_ctx->posts->post_title.'"></a>
//       <a class="addthis_button_twitter" addthis:url="'.$_ctx->posts->getURL().'" addthis:title="'.$_ctx->posts->post_title.'"></a>
//       <a class="addthis_button_pinterest_share" addthis:url="'.$_ctx->posts->getURL().'" addthis:title="'.$_ctx->posts->post_title.'"></a>
//       <a class="addthis_button_google_plusone_share" addthis:url="'.$_ctx->posts->getURL().'" addthis:title="'.$_ctx->posts->post_title.'"></a>
//       <a class="addthis_button_email" addthis:url="'.$_ctx->posts->getURL().'" addthis:title="'.$_ctx->posts->post_title.'"></a>
//       <a class="addthis_button_compact" addthis:url="'.$_ctx->posts->getURL().'" addthis:title="'.$_ctx->posts->post_title.'"></a>
//     </div>
//     <!-- AddThis Button END -->';
// //     return $addThisButtons;
//     }
//     public static function footerContent($cur,$post_id) {
//     echo '<script type="text/javascript" src="http://s7.addthis.com/js/250/addthis_widget.js"></script>';
//     }
// }
